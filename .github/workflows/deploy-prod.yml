name: Deploy to prod environment

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20.x'

      - name: Deploy using ssh
        uses: appleboy/ssh-action@master
        with:
          username: 'root'
          host: ${{ secrets.SERVER_HOST }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: 22
          script: |
            export DISCORD_BOT_TOKEN="${{ secrets.DISCORD_BOT_TOKEN }}"
            export OPENAI_API_KEY="${{ secrets.OPENAI_API_KEY }}"
            export POSTGRES_HOST="${{ secrets.SERVER_HOST }}"
            export POSTGRES_USER="${{ secrets.POSTGRESQL_USERNAME }}"
            export POSTGRES_PASSWORD="${{ secrets.POSTGRESQL_PASSWORD }}"
            export POSTGRES_DATABASE="${{ secrets.POSTGRESQL_DATABASE }}"
            export ANINAME_POSTGRES_URL= "postgresql://${{ secrets.POSTGRESQL_USERNAME }}:${{ secrets.POSTGRESQL_PASSWORD }}@${{ secrets.SERVER_HOST }}:${{ secrets.POSTGRESQL_PORT }}/${{ secrets.POSTGRESQL_DATABASE }}"

            if [ ! -d "main-discord-bot" ]; then
              echo "üîç Main discord bot not found, cloning..."
              git clone https://github.com/ANIname/main-discord-bot.git
            fi

            echo "‚¨áÔ∏è Pulling main discord bot..."
            cd main-discord-bot || exit 1
            git pull

            echo "üì¶ Installing dependencies..."
            npm install --legacy-peer-deps

            echo "üèóÔ∏è Building..."
            rm -rf dist
            npx tsc

            echo "üìã Copying static files..."
            cp -R static dist

            echo "üîß Generating Prisma client..."
            curl -o dist/services/prisma/schema.prisma https://raw.githubusercontent.com/ANIname/architecture/prod/db/postgresql/schema.prisma
            npx prisma generate --schema=./dist/services/prisma/schema.prisma

            echo "üîÑ Restarting/Starting PM2..."
            npx pm2 reload ecosystem.config.js --update-env || npx pm2 start ecosystem.config.js

            echo "‚úÖ Deployed successfully!"